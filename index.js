/////////////////////////////////////////////////////////////
// 1.add elements at the beggining and at the end of an array
/////////////////////////////////////////////////////////////
const addElArray = () => {
    console.log("Initial array : ");
    let array = ['a', 'b' ,'c']
    console.log(array)

    //array functions
    array.unshift('start');
    array.push('end');
    console.log("After adding elements array : ");
    console.log(array)

    
    // ES6 : Using Spread operator
    console.log("Using ES6")
    console.log("Initial array : ");
    array = ['a', 'b' ,'c']

    array = ['start', ...array]
    console.log(array)
    array= [...array, 'end']
    console.log("After adding elements array : ");
    console.log(array)

    // array= ["start",...array, "end"]    
}



/////////////////////////////////////////////////////////////
// 2. How do you create a private variable in JavaScript?
/////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////
// 3. What is the output?
/////////////////////////////////////////////////////////////

const whichTypeOf = () => {
    console.log(typeof typeof 1);
}

/////////////////////////////////////////////////////////////
// 4. What is the bind?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 5. What is the difference btw let and var?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 6. What is prototype in javascript?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 7. What is closure?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 8. Explain the event loop in node.js?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 9. What is the meaning of the keyword this in javascript?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 10. What is node.js?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 11. What is the difference btw null and undefined?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 12. Expalin settimeout in javascript?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 13. What is the difference btw javascript and node.js 
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 14. Expalin what is promise and what is a callback?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 15. difference btw getElementsById, querySelector or querySelectorAll?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 16. differences between == and ===?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 17. What is variable hoisting in JS?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 18. What is Scope of variable? What is Global scope and local scope?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 19. What is OOP? How will you implement it in JavaScript
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 20. What is strict mode in JavaScript
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 21. What does async and defer attributes do? Why they are used in the script tag
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 22. What is shift and push? How they are fiffereing from each other?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 23. What is new operator in JS?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 24. When is JavaScript synchronous? When is javascript asynchronous?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 25. What are all the best practices for writing JavaScript Code? How do you write betterCode?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 26. What is ECMAScript 6 (ES6)? What are the new features?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 27. What is Ajax
/////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////
// 28. What is Call Stack in JS
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 29. How React works? How Virtual-DOM works in REACT?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 30. What is ES6?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 31. What is Node.JS? what is it used for?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 32. What is Event driven programming?
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 33. How is the Spread operator working
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// 34. How is the Rest operator working?
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// 20. What is Ajax
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// 20. What is Ajax
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// 20. What is Ajax
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// 20. What is Ajax
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// 20. What is Ajax
/////////////////////////////////////////////////////////////





 

// Insert the desire function to execute here
//::::::::::::::::::::::::::::::::::::::::::::
whichTypeOf();